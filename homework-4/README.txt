题目描述:
	在一个二维数组中，每一行按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否有这样的数存在。

第一种解法：
        解题思路：
                1.最初使用暴力的方法，每一行迭代寻找，并且记录上一行的终止位置。整个查找范围是左上三角形。
                但是按照这种方法，最坏情况下，若查找数字大于矩阵中所有数字，那么需要遍历整个矩阵。时间复杂度O(n^2)
                2.进一步推想（其实看到了其他的解题方案），二分查找方法，按照1中方法记录上一行的终止位置。
                时间复杂度降低为O(nlogn)
第二种解法:
        解题思路：对于我暂称小白来说，看题目会想到特别多的解决方案，但是可行可实现的最后就是暴力。水滴石穿慢慢进步。
                  脱离常规思路，不拿(0, 0)为顶点，反之在左下角(同理右上方)求解，会发现现在棋盘行走思路有两种，要么，
                  向上走，要么向下走，最后抵达边界点停止。此时，我的时间复杂度是O(n)，最坏情况O(2n)。

        调试注意：while循环中应当将判断条件放置在前面,否则会出现数组首先越界，报段错误。

